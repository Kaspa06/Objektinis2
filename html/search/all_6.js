var searchData=
[
  ['a_20class_20that_20contains_20at_20least_20one_20pure_20virtual_20function_20a_20pure_20virtual_20function_20is_20a_20virtual_20function_20for_20which_20we_20provide_20only_20the_20declaration_20in_20the_20base_20class_20without_20providing_20any_20implementation_20abstract_20classes_20are_20designed_20to_20be_20used_20as_20base_20classes_20and_20they_20cannot_20be_20instantiated_20directly_20instead_20they_20are_20intended_20to_20serve_20as_20interfaces_20that_20define_20a_20common_20set_20of_20methods_20that_20derived_20classes_20must_20implement_0',['An abstract class in C++ is a class that contains at least one pure virtual function. A pure virtual function is a virtual function for which we provide only the declaration in the base class, without providing any implementation. Abstract classes are designed to be used as base classes, and they cannot be instantiated directly. Instead, they are intended to serve as interfaces that define a common set of methods that derived classes must implement.',['../md__r_e_a_d_m_e.html#autotoc_md5',1,'']]],
  ['a_20makefile_20for_20c_20c_20projects_1',['Running a Makefile for C/C++ Projects',['../md__r_e_a_d_m_e.html#autotoc_md24',1,'']]],
  ['a_20new_20object_20as_20a_20copy_20of_20an_20existing_20object_2',['Creates a new object as a copy of an existing object.',['../md__r_e_a_d_m_e.html#autotoc_md12',1,'']]],
  ['a_20pure_20virtual_20function_20is_20a_20virtual_20function_20for_20which_20we_20provide_20only_20the_20declaration_20in_20the_20base_20class_20without_20providing_20any_20implementation_20abstract_20classes_20are_20designed_20to_20be_20used_20as_20base_20classes_20and_20they_20cannot_20be_20instantiated_20directly_20instead_20they_20are_20intended_20to_20serve_20as_20interfaces_20that_20define_20a_20common_20set_20of_20methods_20that_20derived_20classes_20must_20implement_3',['An abstract class in C++ is a class that contains at least one pure virtual function. A pure virtual function is a virtual function for which we provide only the declaration in the base class, without providing any implementation. Abstract classes are designed to be used as base classes, and they cannot be instantiated directly. Instead, they are intended to serve as interfaces that define a common set of methods that derived classes must implement.',['../md__r_e_a_d_m_e.html#autotoc_md5',1,'']]],
  ['a_20temporary_20object_20to_20a_20new_20object_4',['Transfers resources from a temporary object to a new object.',['../md__r_e_a_d_m_e.html#autotoc_md16',1,'']]],
  ['a_20tt_20studentas_20tt_20object_20from_20an_20input_20stream_20it_20reads_20tt_20vardas_20tt_20tt_20pavarde_20tt_20tt_20egzaminas_20tt_20and_20tt_20nd_5frezultatai_20tt_20from_20the_20input_20stream_20and_20constructs_20a_20tt_20studentas_20tt_20object_20accordingly_5',['The input operator &lt;tt&gt;operator\&gt;\&gt;&lt;/tt&gt; is overloaded to deserialize a &lt;tt&gt;Studentas&lt;/tt&gt; object from an input stream. It reads &lt;tt&gt;vardas&lt;/tt&gt;, &lt;tt&gt;pavarde&lt;/tt&gt;, &lt;tt&gt;egzaminas&lt;/tt&gt;, and &lt;tt&gt;nd_rezultatai&lt;/tt&gt; from the input stream and constructs a &lt;tt&gt;Studentas&lt;/tt&gt; object accordingly.',['../md__r_e_a_d_m_e.html#autotoc_md23',1,'']]],
  ['a_20tt_20studentas_20tt_20object_20to_20an_20output_20stream_20it_20prints_20the_20tt_20vardas_20tt_20tt_20pavarde_20tt_20tt_20egzaminas_20tt_20and_20tt_20nd_5frezultatai_20tt_20member_20variables_20to_20the_20output_20stream_6',['The output operator &lt;tt&gt;operator\&lt;\&lt;&lt;/tt&gt; is overloaded to serialize a &lt;tt&gt;Studentas&lt;/tt&gt; object to an output stream. It prints the &lt;tt&gt;vardas&lt;/tt&gt;, &lt;tt&gt;pavarde&lt;/tt&gt;, &lt;tt&gt;egzaminas&lt;/tt&gt;, and &lt;tt&gt;nd_rezultatai&lt;/tt&gt; member variables to the output stream.',['../md__r_e_a_d_m_e.html#autotoc_md21',1,'']]],
  ['abstract_20class_20are_3a_7',['The key characteristics of an abstract class are:',['../md__r_e_a_d_m_e.html#autotoc_md6',1,'']]],
  ['abstract_20class_20in_20c_20is_20a_20class_20that_20contains_20at_20least_20one_20pure_20virtual_20function_20a_20pure_20virtual_20function_20is_20a_20virtual_20function_20for_20which_20we_20provide_20only_20the_20declaration_20in_20the_20base_20class_20without_20providing_20any_20implementation_20abstract_20classes_20are_20designed_20to_20be_20used_20as_20base_20classes_20and_20they_20cannot_20be_20instantiated_20directly_20instead_20they_20are_20intended_20to_20serve_20as_20interfaces_20that_20define_20a_20common_20set_20of_20methods_20that_20derived_20classes_20must_20implement_8',['An abstract class in C++ is a class that contains at least one pure virtual function. A pure virtual function is a virtual function for which we provide only the declaration in the base class, without providing any implementation. Abstract classes are designed to be used as base classes, and they cannot be instantiated directly. Instead, they are intended to serve as interfaces that define a common set of methods that derived classes must implement.',['../md__r_e_a_d_m_e.html#autotoc_md5',1,'']]],
  ['abstract_20class_20zmogus_9',['Abstract Class &quot;Zmogus&quot;',['../md__r_e_a_d_m_e.html#autotoc_md4',1,'']]],
  ['abstract_20classes_20are_20designed_20to_20be_20used_20as_20base_20classes_20and_20they_20cannot_20be_20instantiated_20directly_20instead_20they_20are_20intended_20to_20serve_20as_20interfaces_20that_20define_20a_20common_20set_20of_20methods_20that_20derived_20classes_20must_20implement_10',['An abstract class in C++ is a class that contains at least one pure virtual function. A pure virtual function is a virtual function for which we provide only the declaration in the base class, without providing any implementation. Abstract classes are designed to be used as base classes, and they cannot be instantiated directly. Instead, they are intended to serve as interfaces that define a common set of methods that derived classes must implement.',['../md__r_e_a_d_m_e.html#autotoc_md5',1,'']]],
  ['accordingly_11',['The input operator &lt;tt&gt;operator\&gt;\&gt;&lt;/tt&gt; is overloaded to deserialize a &lt;tt&gt;Studentas&lt;/tt&gt; object from an input stream. It reads &lt;tt&gt;vardas&lt;/tt&gt;, &lt;tt&gt;pavarde&lt;/tt&gt;, &lt;tt&gt;egzaminas&lt;/tt&gt;, and &lt;tt&gt;nd_rezultatai&lt;/tt&gt; from the input stream and constructs a &lt;tt&gt;Studentas&lt;/tt&gt; object accordingly.',['../md__r_e_a_d_m_e.html#autotoc_md23',1,'']]],
  ['an_20abstract_20class_20are_3a_12',['The key characteristics of an abstract class are:',['../md__r_e_a_d_m_e.html#autotoc_md6',1,'']]],
  ['an_20abstract_20class_20in_20c_20is_20a_20class_20that_20contains_20at_20least_20one_20pure_20virtual_20function_20a_20pure_20virtual_20function_20is_20a_20virtual_20function_20for_20which_20we_20provide_20only_20the_20declaration_20in_20the_20base_20class_20without_20providing_20any_20implementation_20abstract_20classes_20are_20designed_20to_20be_20used_20as_20base_20classes_20and_20they_20cannot_20be_20instantiated_20directly_20instead_20they_20are_20intended_20to_20serve_20as_20interfaces_20that_20define_20a_20common_20set_20of_20methods_20that_20derived_20classes_20must_20implement_13',['An abstract class in C++ is a class that contains at least one pure virtual function. A pure virtual function is a virtual function for which we provide only the declaration in the base class, without providing any implementation. Abstract classes are designed to be used as base classes, and they cannot be instantiated directly. Instead, they are intended to serve as interfaces that define a common set of methods that derived classes must implement.',['../md__r_e_a_d_m_e.html#autotoc_md5',1,'']]],
  ['an_20existing_20object_14',['Creates a new object as a copy of an existing object.',['../md__r_e_a_d_m_e.html#autotoc_md12',1,'']]],
  ['an_20input_20stream_20it_20reads_20tt_20vardas_20tt_20tt_20pavarde_20tt_20tt_20egzaminas_20tt_20and_20tt_20nd_5frezultatai_20tt_20from_20the_20input_20stream_20and_20constructs_20a_20tt_20studentas_20tt_20object_20accordingly_15',['The input operator &lt;tt&gt;operator\&gt;\&gt;&lt;/tt&gt; is overloaded to deserialize a &lt;tt&gt;Studentas&lt;/tt&gt; object from an input stream. It reads &lt;tt&gt;vardas&lt;/tt&gt;, &lt;tt&gt;pavarde&lt;/tt&gt;, &lt;tt&gt;egzaminas&lt;/tt&gt;, and &lt;tt&gt;nd_rezultatai&lt;/tt&gt; from the input stream and constructs a &lt;tt&gt;Studentas&lt;/tt&gt; object accordingly.',['../md__r_e_a_d_m_e.html#autotoc_md23',1,'']]],
  ['an_20output_20stream_20it_20prints_20the_20tt_20vardas_20tt_20tt_20pavarde_20tt_20tt_20egzaminas_20tt_20and_20tt_20nd_5frezultatai_20tt_20member_20variables_20to_20the_20output_20stream_16',['The output operator &lt;tt&gt;operator\&lt;\&lt;&lt;/tt&gt; is overloaded to serialize a &lt;tt&gt;Studentas&lt;/tt&gt; object to an output stream. It prints the &lt;tt&gt;vardas&lt;/tt&gt;, &lt;tt&gt;pavarde&lt;/tt&gt;, &lt;tt&gt;egzaminas&lt;/tt&gt;, and &lt;tt&gt;nd_rezultatai&lt;/tt&gt; member variables to the output stream.',['../md__r_e_a_d_m_e.html#autotoc_md21',1,'']]],
  ['and_20overloaded_20methods_17',['Rule of Five and Overloaded Methods',['../md__r_e_a_d_m_e.html#autotoc_md7',1,'']]],
  ['and_20they_20cannot_20be_20instantiated_20directly_20instead_20they_20are_20intended_20to_20serve_20as_20interfaces_20that_20define_20a_20common_20set_20of_20methods_20that_20derived_20classes_20must_20implement_18',['An abstract class in C++ is a class that contains at least one pure virtual function. A pure virtual function is a virtual function for which we provide only the declaration in the base class, without providing any implementation. Abstract classes are designed to be used as base classes, and they cannot be instantiated directly. Instead, they are intended to serve as interfaces that define a common set of methods that derived classes must implement.',['../md__r_e_a_d_m_e.html#autotoc_md5',1,'']]],
  ['and_20tt_20nd_5frezultatai_20tt_20from_20the_20input_20stream_20and_20constructs_20a_20tt_20studentas_20tt_20object_20accordingly_19',['The input operator &lt;tt&gt;operator\&gt;\&gt;&lt;/tt&gt; is overloaded to deserialize a &lt;tt&gt;Studentas&lt;/tt&gt; object from an input stream. It reads &lt;tt&gt;vardas&lt;/tt&gt;, &lt;tt&gt;pavarde&lt;/tt&gt;, &lt;tt&gt;egzaminas&lt;/tt&gt;, and &lt;tt&gt;nd_rezultatai&lt;/tt&gt; from the input stream and constructs a &lt;tt&gt;Studentas&lt;/tt&gt; object accordingly.',['../md__r_e_a_d_m_e.html#autotoc_md23',1,'']]],
  ['and_20tt_20nd_5frezultatai_20tt_20member_20variables_20to_20the_20output_20stream_20',['The output operator &lt;tt&gt;operator\&lt;\&lt;&lt;/tt&gt; is overloaded to serialize a &lt;tt&gt;Studentas&lt;/tt&gt; object to an output stream. It prints the &lt;tt&gt;vardas&lt;/tt&gt;, &lt;tt&gt;pavarde&lt;/tt&gt;, &lt;tt&gt;egzaminas&lt;/tt&gt;, and &lt;tt&gt;nd_rezultatai&lt;/tt&gt; member variables to the output stream.',['../md__r_e_a_d_m_e.html#autotoc_md21',1,'']]],
  ['another_20existing_20object_21',['Another existing object',['../md__r_e_a_d_m_e.html#autotoc_md14',1,'Assigns the state of one object to another existing object.'],['../md__r_e_a_d_m_e.html#autotoc_md18',1,'Transfers resources from one object to another existing object.']]],
  ['any_20implementation_20abstract_20classes_20are_20designed_20to_20be_20used_20as_20base_20classes_20and_20they_20cannot_20be_20instantiated_20directly_20instead_20they_20are_20intended_20to_20serve_20as_20interfaces_20that_20define_20a_20common_20set_20of_20methods_20that_20derived_20classes_20must_20implement_22',['An abstract class in C++ is a class that contains at least one pure virtual function. A pure virtual function is a virtual function for which we provide only the declaration in the base class, without providing any implementation. Abstract classes are designed to be used as base classes, and they cannot be instantiated directly. Instead, they are intended to serve as interfaces that define a common set of methods that derived classes must implement.',['../md__r_e_a_d_m_e.html#autotoc_md5',1,'']]],
  ['are_20designed_20to_20be_20used_20as_20base_20classes_20and_20they_20cannot_20be_20instantiated_20directly_20instead_20they_20are_20intended_20to_20serve_20as_20interfaces_20that_20define_20a_20common_20set_20of_20methods_20that_20derived_20classes_20must_20implement_23',['An abstract class in C++ is a class that contains at least one pure virtual function. A pure virtual function is a virtual function for which we provide only the declaration in the base class, without providing any implementation. Abstract classes are designed to be used as base classes, and they cannot be instantiated directly. Instead, they are intended to serve as interfaces that define a common set of methods that derived classes must implement.',['../md__r_e_a_d_m_e.html#autotoc_md5',1,'']]],
  ['are_3a_24',['The key characteristics of an abstract class are:',['../md__r_e_a_d_m_e.html#autotoc_md6',1,'']]],
  ['as_20a_20copy_20of_20an_20existing_20object_25',['Creates a new object as a copy of an existing object.',['../md__r_e_a_d_m_e.html#autotoc_md12',1,'']]],
  ['as_20base_20classes_20and_20they_20cannot_20be_20instantiated_20directly_20instead_20they_20are_20intended_20to_20serve_20as_20interfaces_20that_20define_20a_20common_20set_20of_20methods_20that_20derived_20classes_20must_20implement_26',['An abstract class in C++ is a class that contains at least one pure virtual function. A pure virtual function is a virtual function for which we provide only the declaration in the base class, without providing any implementation. Abstract classes are designed to be used as base classes, and they cannot be instantiated directly. Instead, they are intended to serve as interfaces that define a common set of methods that derived classes must implement.',['../md__r_e_a_d_m_e.html#autotoc_md5',1,'']]],
  ['assignment_20operator_27',['Assignment Operator',['../md__r_e_a_d_m_e.html#autotoc_md13',1,'Copy Assignment Operator'],['../md__r_e_a_d_m_e.html#autotoc_md17',1,'Move Assignment Operator']]],
  ['assigns_20the_20state_20of_20one_20object_20to_20another_20existing_20object_28',['Assigns the state of one object to another existing object.',['../md__r_e_a_d_m_e.html#autotoc_md14',1,'']]],
  ['at_20least_20one_20pure_20virtual_20function_20a_20pure_20virtual_20function_20is_20a_20virtual_20function_20for_20which_20we_20provide_20only_20the_20declaration_20in_20the_20base_20class_20without_20providing_20any_20implementation_20abstract_20classes_20are_20designed_20to_20be_20used_20as_20base_20classes_20and_20they_20cannot_20be_20instantiated_20directly_20instead_20they_20are_20intended_20to_20serve_20as_20interfaces_20that_20define_20a_20common_20set_20of_20methods_20that_20derived_20classes_20must_20implement_29',['An abstract class in C++ is a class that contains at least one pure virtual function. A pure virtual function is a virtual function for which we provide only the declaration in the base class, without providing any implementation. Abstract classes are designed to be used as base classes, and they cannot be instantiated directly. Instead, they are intended to serve as interfaces that define a common set of methods that derived classes must implement.',['../md__r_e_a_d_m_e.html#autotoc_md5',1,'']]]
];
